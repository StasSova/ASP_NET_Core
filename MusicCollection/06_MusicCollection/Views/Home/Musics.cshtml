@model _06_MusicCollection.Models.ViewModel.Home.VM_Musics;

<link rel="stylesheet" href="~/css/Home/musics.css" />
@{
    ViewData["Title"] = @Model.Title;
    Layout = "_Layout_Home";
    var index = 0;
}

<section class="musics">
    <div class="header">
        <img src=@Model.Poster alt="Alternate Text" />
        <div class="info">
            <p class="pl">Playlist</p>
            <p class="title">@Model.Title</p>
            <p class="descr">@Model.Description</p>
            <div class="det">
                <div class="logo">
                    <div class="icon">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512">
                            <path fill="green" d="M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z" />
                        </svg>
                    </div>
                    <p>Spotify</p>
                </div>
                •<p>@Model.TotalLikes likes</p>
                •<p>@Model.TotalSongs songs</p>
                •@{
                    // Преобразуем TimeSpan в строку с форматом времени "hh\:mm\:ss"
                    string durationString = Model.TotalDuration.ToString(@"hh\:mm\:ss");

                    // Разделим строку по двоеточию, чтобы получить отдельные части времени
                    string[] parts = durationString.Split(':');

                    // Проверяем, есть ли часы в строке
                    if (parts.Length >= 3 && int.Parse(parts[0]) > 0)
                    {
                        // Если есть часы, отображаем их и минуты
                        string formattedDuration = $"{int.Parse(parts[0])}hr {int.Parse(parts[1])}min";
                        <p>@formattedDuration</p>
                    }
                    else
                    {
                        // Если нет часов, отображаем только минуты и секунды
                        string formattedDuration = $"{int.Parse(parts[1])}min {int.Parse(parts[2])}sec";
                        <p>@formattedDuration</p>
                    }
                }
            </div>
        </div>
    </div>

    <div class="collection">
        <div class="header">
            <p class="id">#</p>
            <p>Title</p>
            <p>Album</p>
            <p>Time</p>
        </div>
        <div class="content">
            @if (Model.Songs == null || Model.Songs.Count == 0)
            {
                <p>Songs not found</p>
            }
            else
            {
                @foreach (var song in Model.Songs)
                {
                    <div class="song">


                        <button class="id" onclick="playSong('@song.FilePath' ,'@song.Poster', '@song.Title', '@song.Album.Id', '@song.Album.Title', '@song.Duration.ToString(@"m\:ss")', '@string.Join("|&|", song.Artists.Select(a => $"{a.Id},{a.Name}"))')">
                            @{
                                index += 1;
                            }
                            <p class="index">@index</p>

                            <div class="play">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
                                    <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
                                </svg>
                            </div>

                        </button>


                        <div class="desc">
                            <img src=@song.Poster alt="poster" />
                            <div class="content">
                                <p class="title">@song.Title</p>
                                <div class="alb_art">
                                    @foreach (var artist in song.Artists.Take(2))
                                    {
                                        <a asp-action="MusicsByArtist" asp-route-id="@artist.Id">@artist.Name</a>
                                    }
                                </div>
                            </div>
                        </div>

                        @* TODO добавить альбом, который был присвоен изначально песне *@
                        <a class="album" asp-action="MusicsByArtist" asp-route-id="@song.Album.Id">@song.Album.Title</a>
                        <p class="dur">@song.Duration.ToString(@"m\:ss")</p>
                    </div>

                }
            }
        </div>
    </div>

</section>



@section Scripts {
    <script>
        function playSong(FilePath, posterUrl, title, albumId, albumTitle, duration, artists) {
            initializeNewSong(FilePath, posterUrl, title, albumId, albumTitle, duration, artists);
        }
    </script>
}